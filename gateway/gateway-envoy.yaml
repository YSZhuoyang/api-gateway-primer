static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          access_log:
          - name: envoy.file_access_log
            config:
              path: /dev/stdout
          stat_prefix: grpc_json
          codec_type: auto
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  # Below prefix matches the outgoing gRPC route path, not incoming request route path
                  # as the transcoder translates http request route to gRPC route
                  prefix: "/contracts.Greeter"
                  grpc: {}
                route:
                  cluster: greeter-service
                  timeout:
                    seconds: 60
              # - match:
              #     prefix: "/service/2"
              #   route:
              #     cluster: service2
          http_filters:
          - name: envoy.grpc_json_transcoder
            config:
              proto_descriptor: "contracts/desc.pb"
              services: ["contracts.Greeter"] # to add ...
              print_options:
                add_whitespace: true
                always_print_primitive_fields: true
                always_print_enums_as_ints: false
                preserve_proto_field_names: false
          - name: envoy.router

  clusters:
  - name: greeter-service
    connect_timeout: 1.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: greeter-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 81
  # - name: service2
  #   connect_timeout: 0.25s
  #   type: strict_dns
  #   lb_policy: round_robin
  #   http2_protocol_options: {}
  #   load_assignment:
  #     cluster_name: service2
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               address: service2
  #               port_value: 80

admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
